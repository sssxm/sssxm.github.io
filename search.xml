<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTTP报文内的信息以及状态码]]></title>
    <url>%2F2019%2F04%2F23%2FHTTP%E6%8A%A5%E6%96%87%E5%86%85%E7%9A%84%E4%BF%A1%E6%81%AF%E4%BB%A5%E5%8F%8A%E7%8A%B6%E6%80%81%E7%A0%81%2F</url>
    <content type="text"><![CDATA[HTTP 报文内的信息HTTP 报文 用于HTTP 协议交互的信息 请求报文和响应报文 由报文首部和报文主体组成，由CR+LF分割 报文首部 请求行 （请求报文） OR 状态行（响应报文） 请求行：请求的方法，URI和HTTP 版本 状态行：响应状态码，原因短语和HTTP 版本 请求首部字段 （请求报文） OR 响应首部字段（响应报文） 通用首部字段 实体首部字段 其他：Cookie 等 报文主体可有可无 获取部分内容的范围请求可以理解为一种可恢复机制 需要实现对指定范围发送的请求：范围请求（Range Request） 实现 首部字段 Range 来指定资源的byte 范围 123GET /tip.jpg HTTP/1.1Host: www.example.comRange: bytes = 5001 - 10000 Range：bytes = 5001 - （5001 以后全部） Range：bytes = -3000， 5000-7000 （从头到3000字节和5000到7000字节的多重范围） 响应会返回206 Partial Content 响应码，如果是多重范围，会在Content-Type注明 multiple/byteranges 如果服务器不支持范围请求，返回200 OK 以及完整的实体内容 返回结果的HTTP状态码 2xx 成功 200 OK 表示请求在服务器端正常处理了 204 No Content 请求正常处理，但是返回的响应报文中不含实体的主体部分 206 Partial Content 响应报文中包含由Content-Range指定返回的实体内容 3xx 重定向 301 Moved Permanently 永久重定向，表示请求的资源已经被分配了新的URI 302 Found 临时重定向，表示请求的资源被临时分配了新的URI 303 See other 临时重定向，和302相似 不同：303状态码明确表示客户端应该采用GET 方法获取资源 301和302标准中，禁止将POST 方法换为GET 方法，虽然实际中都是这样做的 304 Not Modified 虽然是3xx， 但是和重定向没有关系 表示当客户端发送附加条件的请求时，服务器允许访问，但是不满足附加条件 307 Temporary Redirect 临时重定向，和302相似 遵守浏览器标准，不会从POST变为GET 4xx 客户端错误 400 Bad Request 请求报文中有语法错误 401 Unauthorized 发送的请求需要通过HTTP 验证后才能访问 第一次返回401：页面认证，在WWW-Authenticate首部用以Challenge 用户信息 第二次返回401：认证失败 403 Forbidden 表明对请求资源的访问被服务器拒绝 404 Not Found 表明服务器上无法找到请求的资源 或服务器拒绝请求并且不想说明理由 5xx 服务器错误 500 Internal Server Error 服务器端在执行请求时发生错误 503 Service Unavailable 表明服务器暂时处于超负荷运行或者正在进行维护 服务器可以在响应报文中写入RetryAfter首部字段说明服务恢复时间 From https://sssxm.github.io/2019/04/23/HTTP报文内的信息以及状态码/ Thank you]]></content>
      <categories>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
        <tag>网络</tag>
        <tag>Reading Note</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web基础以及HTTP协议梗概]]></title>
    <url>%2F2019%2F04%2F22%2FWeb%E5%9F%BA%E7%A1%80%E4%BB%A5%E5%8F%8AHTTP%E5%8D%8F%E8%AE%AE%E6%A2%97%E6%A6%82%2F</url>
    <content type="text"><![CDATA[Web 以及 网络基础HTTP: HyperText Transfer Protocol, 超文本传输协议 TCP/IP： 互联网相关联的协议总称 TCP 和 IP 两种协议 HTTP 是TCP/IP的子集 TCP/IP 分层： Pros： 改变设计时，只需要替换需要变换的层，只要有了规划好的接口部分，每层内部设计可以自由改动； 每层只用负责自己部分的任务，如应用层无需考虑传输线路，确保送达等问题 应用层 应用层决定了向用户提供应用服务时的通信活动 FTP，DNS，HTTP 传输层 提供处于网络连接中的两台计算机之间的数据传输 TCP，UDP 网络层 处理网络上流动的数据包 规定通过怎样的路径到达对方的计算机，并将数据包传送给对方 数据链路层 处理连接网络的硬件设备 TCP/IP 传输流 客户端在应用层通过HTTP 协议发送一个web 页面的HTTP 请求 传输层（TCP 协议）把从应用层收到的数据（HTTP 请求报文）分隔，并为每个报文打上序号和端口号并转发给网络层 在网络层（IP 协议），添加作为通信地址的MAC 地址后转发给链路层 服务器在链路层收到数据吗，按序向上层发送，直到应用层。 封装 在传输端，数据都会被打上一个该层的首部信息 在接收端，数据会把响应的首部消去 相关协议：IP， TCP，DNS负责传输的IP 协议 Internet Protocol， 网际协议 网络层 作用：把数据包传给对方 需要IP 地址和 MAC 地址 IP 地址是节点被分配的地址， 可变 MAC 地址是邮件地址，基本不可变 ARP 协议 用于解析地址的协议 根据通信方的IP地址反查对应的MAC 地址 确保可靠性的TCP 协议 传输层 提供可靠的字节流服务 字节流服务：为了方便传输，将大块数据分割成报文段为单位的数据包进行管理 能把数据准确的传送给对方 能够确认数据是否送达对方 三次握手 发送端发送带有SYN标志的数据包给对方 接收方回传带有SYN和ACK标志的数据包 发送方发送带有ACK标志的数据包 负责域名解析的DNS服务 应用层 提供域名到IP地址之间的解析服务 各协议和HTTP协议的关系 DNS：将域名转为IP地址 TCP：分割HTTP报文可靠发送报文段 IP：一边中转一边传送 TCP（server）：接受并重组报文 HTTP：处理请求 URI 和 URL URL：网页地址，资源地址 URI：某个协议方案表示的资源定位标识符 HTTP 协议 HTTP 协议中，在一条通信线路上，一端为客户端，另一端为服务器端 协议规定，客户端首先开始建立通信，服务器在没有接收到请求前不会发送响应 请求报文 响应报文 HTTP 是无状态协议 为了更快处理大量事务，确保协议的可伸缩性 通过引入Cookie，可以实现期望的保持状态功能 HTTP 方法 GET：用来请求访问已被URI 识别的资源 POST：传输实体，虽然和GET 相似，但是POST主要目的不是获取响应的主题内容 PUT：传输文件，由于HTTP/1.1没有验证机制，存在安全性问题 HEAD：获得报文首部，和GET 类似，但是不返回报文主体。用于确认URI和资源有效性 DELETE: 删除文件，和PUT相反。同样存在安全性问题 OPTIONS: 查询针对请求URL指定的资源支持的方法 TRACE：查询发送的请求是如何被加工修改的 CONNECT：要求在与代理服务器通信时建立隧道，主要使用SSL（Secure Sockets Layer) 和TLS(Transport Layer Security) 持续连接 在HTTP协议初始版本中，每次进行一次HTTP通信就要断开TCP连接 如果一个HTML页面有多个资源的时候，每次请求都会造成无谓的TCP建立和断开，增加通信量的开销 在HTTP/1.1和部分HTTP/1.0 支持，持久连接 （HTTP Persistent Connection） 只要任意一端没有明确提出断开连接，则一直保持TCP连接状态 减少了TCP连接的重复建立和断开所造成的额外开销 减轻了服务器负担 Web显示速度提高 使用Cookie进行状态管理 Cookie 技术通过在请求和响应报文中写入Cookie信息来控制客户端状态 Server的响应报文通过set-cookie的首部字段信息，传输并通知client 保存Cookie Client 下次发送请求时，自动在请求报文中加入Cookie值 Server通过对比Cookie，得到之前的状态信息 From https://sssxm.github.io/2019/04/22/Web基础以及HTTP协议梗概/ Thank you]]></content>
      <categories>
        <category>HTTP</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
        <tag>网络</tag>
        <tag>Reading Note</tag>
      </tags>
  </entry>
</search>
